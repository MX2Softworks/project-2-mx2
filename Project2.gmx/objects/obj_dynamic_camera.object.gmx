<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-10</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize camera variables

shake = 0; 
full_screen = false; 
v_sync = false; 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Controls camera movement

if(instance_exists(obj_game_mode)){
    //Fullscreen
    if((keyboard_check_pressed(vk_f2) || global.fullscreen == true) &amp;&amp; full_screen == false){
        full_screen = true;
        global.fullscreen = true; 
        window_set_fullscreen(true); 
    }
    else if((keyboard_check_pressed(vk_f2) || global.fullscreen == false) &amp;&amp; full_screen == true){
        full_screen = false;
        global.fullscreen = false; 
        window_set_fullscreen(false); 
    }
    
    //Vsync
    if(global.vsync == true &amp;&amp; v_sync == false){
        v_sync = true; 
        global.vsync = true; 
        display_reset(0, true); 
    }
    else if(global.vsync == false &amp;&amp; v_sync == true){
        v_sync = false; 
        global.vsync = false;
        display_reset(0, false);  
    }
}


//Pause if Pause Game
if(instance_exists(obj_game_mode) &amp;&amp; global.pauseActive == true){
    exit;  
}

var x_to, y_to; 

if(instance_exists(obj_player)){
    if((obj_player.is_sliding == 1 || obj_player.wall_slide == 1)){ 
        shake = .4
    } 
    else if(obj_player.charge_dash_held &amp;&amp; obj_player.can_dash &amp;&amp; obj_player.dash_count &lt; 3 &amp;&amp; obj_player.dash_charge_mode){
        if(obj_player.charge_dash){
            shake = 0;
        }
        else{
            shake = obj_player.dash_held_frames/71
        }
    }
    else{
        shake *= .9;     
    }
    
    x_to = obj_player.x + obj_player.direction_horizontal*abs(obj_player.hspd);
    y_to = obj_player.y + obj_player.direction_vertical*abs(obj_player.vspd);
    
    x += (x_to-x)/5;
    y += (y_to-y)/2;
}

view_xview = -(view_wview/2) + x; 
view_yview = -(view_hview/2) + y;   

view_xview = clamp(view_xview, 0, room_width-view_wview);
view_yview = clamp(view_yview, 0, room_height-view_hview); 

view_xview += random_range(-shake*(view_wview/500), shake*(view_wview/500));
view_yview += random_range(-shake*(view_hview/500), shake*(view_wview/500)); 


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
